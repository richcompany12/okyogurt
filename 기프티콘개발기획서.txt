기프티콘 시스템 개발 계획서
📋 프로젝트 개요
🎯 프로젝트 목적

타겟: 삼성전자 화성사업장 직원들의 선결제 → 기프티콘 전환
솔루션: 물리적 기프티콘을 통한 유연한 분배 및 사용 시스템
핵심 가치: 선입금 확보, 분실 시 순이익, 고객 편의성 증대

🏢 비즈니스 배경

현재 문제: 팀별 선결제 → 기간 내 미사용 시 손실
해결 방안: 기프티콘으로 개별 분배 → 언제든 사용 가능
기대 효과: 매출 안정화, 고객 만족도 증가, 추가 수익 창출

🎁 기프티콘 시스템 사양
💳 기프티콘 권종
권종타겟 용도예상 수요1만원권개인 간식, 소량 분배높음2만원권2인 간단 식사중간3만원권개인 여유식사, 소규모 모임중간5만원권팀 미팅, 프리미엄 메뉴낮음
📅 기본 정책

유효기간: 1년 (카카오기프티콘과 동일)
할인 정책: 없음 (필요시 수동 할인)
재충전: 가능
잔액 확인: 카톡/문자 문의 → 스캔 후 답변

🔒 보안 정책

QR코드 구조: 기프티콘ID_보안해시_타임스탬프
중복 사용 방지: 서버 실시간 검증
물리적 보안: 홀로그램 스티커 (향후 적용)

🏗️ 시스템 아키텍처
📱 애플리케이션 구조
기존 앱 (Firebase)
├── 어드민 대시보드
│   ├── 주문 관리
│   ├── 제휴상점 관리
│   ├── 통계 (통합 매출)
│   └── 기프티콘 → [링크: gifticon.yourdomain.com]
│
기프티콘 앱 (Firebase - 별도 프로젝트)
├── 기프티콘 발행
├── 사용 처리 (QR 스캔)
├── 재충전 관리
├── 통계 대시보드
└── 설정 관리
🌐 도메인 구조

메인 앱: yourdomain.com
기프티콘 앱: gifticon.yourdomain.com
SSL: 공유 인증서 사용

🗄️ 데이터베이스 설계
Firestore 컬렉션 구조
/gifticons/
  - gifticonId (string)
  - denomination (number) // 권종
  - balance (number)      // 현재 잔액
  - status (string)       // active, used, expired
  - issuedAt (timestamp)
  - expiresAt (timestamp)
  - qrCode (string)
  - securityHash (string)

/gifticon_sales/
  - saleId (string)
  - gifticonId (string)
  - amount (number)
  - paymentMethod (string)
  - soldAt (timestamp)
  - customerId (string, optional)

/gifticon_usage/
  - usageId (string)
  - gifticonId (string)
  - usedAmount (number)
  - remainingBalance (number)
  - usedAt (timestamp)
  - location (string)
  - items (array)

/gifticon_recharge/
  - rechargeId (string)
  - gifticonId (string)
  - rechargeAmount (number)
  - newBalance (number)
  - rechargedAt (timestamp)
🔗 기존 앱 연동
Cloud Functions
javascript// 매출 통계 연동
exports.syncGifticonSales = functions.firestore
  .document('gifticon_sales/{docId}')
  .onCreate(async (snap, context) => {
    // 기존 앱 total_sales에 기록
  });

exports.syncGifticonUsage = functions.firestore
  .document('gifticon_usage/{docId}')
  .onCreate(async (snap, context) => {
    // 기존 앱 실제 매출에 기록
  });
📱 기능 상세 명세
🎁 기프티콘 발행
기능: 새로운 기프티콘 생성 및 QR 코드 생성

입력: 권종 선택, 수량
처리: QR 코드 생성, 보안 해시 생성, DB 저장
출력: 기프티콘 ID 리스트, 인쇄용 QR 코드

📷 사용 처리 (QR 스캔)
기능: QR 스캔을 통한 기프티콘 사용 처리

입력: QR 스캔 → 기프티콘 ID 추출
검증: 유효성, 잔액, 중복 사용 체크
처리: 사용 금액 입력 → 잔액 차감 → 사용 내역 저장
출력: 사용 완료 알림, 잔액 정보

♻️ 재충전 관리
기능: 사용 완료된 기프티콘 재활성화 및 잔액 충전

입력: 사용완료 QR 스캔, 재충전 금액
처리: 상태 변경 (used → active), 잔액 업데이트
출력: 재충전 완료 알림, 새로운 잔액

📊 통계 대시보드
기능: 기프티콘 발행/사용/재충전 현황 모니터링

발행 현황: 권종별 발행량, 총 발행 금액
사용 현황: 일별/월별 사용 패턴, 사용률
재충전 현황: 재충전 빈도, 평균 재충전 금액
수익 분석: 분실/미사용으로 인한 순이익

🔍 잔액 확인
기능: 고객 문의 시 잔액 확인 서비스

방법: 카톡/문자로 QR 사진 수신 → 스캔 → 답변
정보: 잔액, 유효기간, 사용 가능 여부

🛠️ 기술 스택
🎨 프론트엔드

프레임워크: React.js
UI 라이브러리: Material-UI 또는 Ant Design
QR 스캔: react-qr-scanner
차트: Chart.js 또는 Recharts
스타일링: Styled-components

⚙️ 백엔드

플랫폼: Firebase
데이터베이스: Firestore
함수: Cloud Functions (Node.js)
호스팅: Firebase Hosting
인증: Firebase Auth (관리자 전용)

📦 주요 라이브러리
json{
  "react": "^18.0.0",
  "react-router-dom": "^6.0.0",
  "firebase": "^10.0.0",
  "qrcode": "^1.5.0",
  "react-qr-scanner": "^1.0.0",
  "chart.js": "^4.0.0",
  "moment": "^2.29.0"
}
🔄 프로세스 플로우
📋 기프티콘 발행 프로세스
1. 관리자 로그인
2. 발행 메뉴 선택
3. 권종 및 수량 입력
4. QR 코드 생성 및 DB 저장
5. 인쇄용 파일 생성
6. 물리적 제작 의뢰
🛒 판매 프로세스
1. 고객 기프티콘 구매 요청
2. 수동 결제 처리 (카드/현금)
3. 판매 내역 시스템 등록
4. 기프티콘 전달
5. 매출 통계 자동 업데이트
🍔 사용 프로세스
1. 고객 매장 방문 및 기프티콘 제시
2. 관리자 QR 스캔
3. 유효성 및 잔액 확인
4. 주문 받기 및 사용 금액 입력
5. 잔액 차감 처리
6. 음식 제공
7. 사용 내역 저장
🔄 재충전 프로세스
1. 사용완료 기프티콘 수거
2. QR 스캔으로 기프티콘 확인
3. 재충전 금액 결제 받기
4. 시스템에서 재충전 처리
5. 기프티콘 재전달
6. 재충전 내역 저장
🎨 UI/UX 설계
📱 관리자 대시보드 레이아웃
헤더: 로고, 사용자 정보, 로그아웃
사이드바:
├── 📊 대시보드 (홈)
├── 🎁 기프티콘 발행
├── 📷 사용 처리
├── ♻️ 재충전 관리
├── 📋 발행 내역
├── 📈 사용 통계
└── ⚙️ 설정

메인 영역: 선택된 메뉴 내용 표시
📷 QR 스캔 인터페이스
상단: 카메라 뷰
중앙: 스캔 가이드 (사각형 프레임)
하단: 
├── 스캔 결과 표시 영역
├── 수동 입력 버튼
└── 취소 버튼
📊 통계 대시보드
상단: 주요 지표 카드
├── 총 발행 금액
├── 총 사용 금액  
├── 미사용 잔액
└── 순이익

중앙: 차트 영역
├── 일별 사용 패턴 (라인 차트)
├── 권종별 판매 현황 (파이 차트)
└── 월별 매출 추이 (바 차트)

하단: 상세 내역 테이블
🔒 보안 및 인증
🛡️ QR 코드 보안
javascript// QR 코드 생성 알고리즘
const generateQRCode = (gifticonId) => {
  const timestamp = Date.now();
  const securityHash = generateHash(gifticonId + timestamp + SECRET_KEY);
  return `${gifticonId}_${securityHash}_${timestamp}`;
};

// QR 코드 검증
const validateQRCode = (qrData) => {
  const [id, hash, timestamp] = qrData.split('_');
  const expectedHash = generateHash(id + timestamp + SECRET_KEY);
  return hash === expectedHash && isNotExpired(timestamp);
};
👤 관리자 인증

Firebase Auth: 이메일/비밀번호 로그인
역할 기반 접근: 관리자 전용 권한
세션 관리: 자동 로그아웃 (30분 비활성)

🔐 데이터 보안

Firestore Rules: 인증된 관리자만 접근
HTTPS 강제: 모든 통신 암호화
API 키 보호: 환경 변수로 관리

🧪 테스트 계획
🔍 단위 테스트

QR 코드 생성/검증 함수
잔액 계산 로직
유효기간 체크 함수
보안 해시 생성 함수

🔗 통합 테스트

기프티콘 발행 → 사용 → 재충전 전체 플로우
기존 앱과의 매출 데이터 연동
Cloud Functions 트리거 동작

👥 사용자 테스트

관리자 사용성 테스트
QR 스캔 정확도 테스트
모바일 환경 호환성 테스트
고객 사용 시나리오 테스트

📊 성능 테스트

동시 QR 스캔 처리 능력
대용량 데이터 조회 성능
실시간 통계 업데이트 속도

📦 물리적 제작 사양
💳 PVC 카드 사양

크기: 신용카드 표준 (85.60 × 53.98 mm)
두께: 0.76mm (표준)
재질: PVC (내구성 강화)
인쇄: 4도 컬러 (앞뒤)

🏷️ QR 스티커 사양

크기: 25×25mm 또는 30×30mm
재질: 비닐 스티커 (내수성)
점착: 강력 접착 (영구 부착)
보안: 홀로그램 재질 (위조 방지)

🎨 디자인 요소

브랜드 로고: 상단 중앙
권종 표시: 대형 폰트, 눈에 띄는 색상
QR 코드: 우하단 또는 뒷면
시리얼 번호: 하단 작은 폰트
유효기간: "발행일로부터 1년"

📊 초기 제작 수량
권종제작 수량예상 비용1만원권500장25만원2만원권300장15만원3만원권200장10만원5만원권100장5만원합계1,100장55만원
📅 개발 일정
Phase 1: 프로젝트 설정 및 기반 구축 (1주)
목표: 개발 환경 구축 및 기본 틀 완성

 Firebase 프로젝트 생성 및 설정
 React 프로젝트 초기화
 Firestore 데이터베이스 구조 설계
 기본 라우팅 설정
 UI 컴포넌트 라이브러리 설정
 개발 환경 구축 (ESLint, Prettier)

Phase 2: 핵심 기능 개발 (3주)
Week 1: QR 및 기프티콘 관리

 QR 코드 생성/검증 로직 구현
 기프티콘 발행 기능
 기프티콘 상태 관리 시스템
 보안 해시 생성 알고리즘

Week 2: 사용 처리 시스템

 QR 스캔 인터페이스 구현
 사용 처리 로직 개발
 잔액 관리 시스템
 사용 내역 저장 기능

Week 3: 재충전 및 관리 기능

 재충전 처리 시스템
 관리자 대시보드 UI
 발행/사용/재충전 내역 조회
 데이터 검색 및 필터링

Phase 3: 통계 및 연동 (2주)
Week 1: 통계 시스템

 통계 데이터 집계 로직
 차트 및 그래프 구현
 실시간 데이터 업데이트
 리포트 생성 기능

Week 2: 기존 앱 연동

 Cloud Functions 개발
 매출 데이터 연동 API
 기존 앱 대시보드 수정
 통합 통계 표시

Phase 4: 테스트 및 배포 (2주)
Week 1: 테스트

 단위 테스트 작성 및 실행
 통합 테스트 시나리오 검증
 보안 테스트 (QR 코드 위조 시도)
 성능 테스트 (동시 접속, 대용량 데이터)

Week 2: 배포 및 최적화

 프로덕션 환경 설정
 Firebase Hosting 배포
 도메인 연결 (gifticon.yourdomain.com)
 모니터링 및 로깅 설정
 사용자 문서 작성

Phase 5: 물리적 제작 및 런칭 (1주)

 디자인 파일 완성
 PVC 카드 제작 업체 발주
 QR 스티커 제작
 초기 물량 확보 (각 권종별)
 직원 교육 및 시스템 오픈

💰 예상 비용
💻 개발 비용
항목예상 비용비고Firebase 사용료월 5-10만원사용량에 따라개발 시간300-500만원외주 시디자인 작업50-100만원카드 디자인
🏭 제작 비용
항목예상 비용비고PVC 카드 제작장당 300-500원수량에 따라 할인QR 스티커장당 50-100원홀로그램 적용 시초기 1,100장55-80만원카드+스티커 포함
📊 총 초기 투자비용

최소: 405만원 (개발 300 + 제작 55 + 기타 50)
최대: 680만원 (개발 500 + 제작 80 + 기타 100)

📈 성공 지표 (KPI)
📊 판매 지표

월간 기프티콘 판매액: 목표 500만원
권종별 판매 비율: 1만원권 50%, 2만원권 25%, 3만원권 15%, 5만원권 10%
재구매율: 월 30% 이상

💰 수익 지표

분실/미사용률: 5-10% (순이익)
재충전률: 월 20% 이상
평균 사용 기간: 발행 후 3개월 이내

🎯 운영 지표

시스템 가동률: 99.9% 이상
QR 스캔 성공률: 98% 이상
고객 만족도: 4.5/5.0 이상

⚠️ 리스크 및 대응방안
🔒 기술적 리스크
리스크확률영향도대응방안QR 코드 위조중간높음보안 해시 강화, 홀로그램 적용시스템 장애낮음높음Firebase 백업, 모니터링 강화데이터 손실낮음매우높음자동 백업, 다중화 저장
💼 비즈니스 리스크
리스크확률영향도대응방안수요 예측 실패중간중간소량 제작 후 점진적 확대현금흐름 문제낮음높음단계적 투자, ROI 모니터링경쟁사 모방높음낮음빠른 시장 진입, 차별화
📋 운영 리스크
리스크확률영향도대응방안직원 교육 부족중간중간상세 매뉴얼, 정기 교육고객 인식 부족높음중간마케팅 강화, 설명 자료카드 분실/도난높음낮음분실 신고 시스템
🚀 향후 확장 계획
📱 기능 확장

모바일 앱: 고객용 잔액 확인 앱
온라인 판매: 웹사이트를 통한 기프티콘 판매
API 연동: 다른 시스템과의 연동
블록체인: 위조 방지 강화

🏢 사업 확장

다른 지역: 인근 산업단지 확장
다른 업종: 카페, 편의점 등 제휴
B2B 서비스: 기업 복리후생 서비스
프랜차이즈: 시스템 라이선스 판매

🎯 고도화 계획

AI 분석: 사용 패턴 분석 및 예측
개인화: 고객별 맞춤 추천
마케팅: 타겟 마케팅 자동화
통합 관리: 전체 사업 통합 대시보드

📞 연락처 및 문서 정보
📋 문서 정보

작성일: 2025년 6월 6일
버전: v1.0
작성자: 기프티콘 시스템 기획팀
최종 검토: [검토자명]

🤝 개발 진행 시 체크리스트

 개발 팀 구성 완료
 예산 승인 완료
 Firebase 계정 준비
 디자인 컨셉 확정
 제작 업체 선정
 개발 일정 확정
 테스트 계획 수립